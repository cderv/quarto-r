[{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Publishing","text":"quarto package includes several functions enable publish static interactive documents, websites, books Posit Connect shinyapps.io. publishing Posit Connect, simple content publishing (local rendering) well code publishing (rendering Connect) supported.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"accounts","dir":"Articles","previous_headings":"","what":"Accounts","title":"Publishing","text":"publishing Posit Connect shinyapps.io ensure account configured publishing. Posit Connect, use rsconnect::connectUser() function server publishing . example: ’ll prompted authoring account web browser. shinyapps.io, use rsconnect::setAccountInfo() function. example: Note can copy paste code Tokens page shinyapps.io admin panel.","code":"rsconnect::connectUser(server = \"rsc.example.com\") rsconnect::setAccountInfo(name = 'norahjones', token = 'AB6783FD23', secret = '36x+k0bBy6W')"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"documents","dir":"Articles","previous_headings":"","what":"Documents","title":"Publishing","text":"Use quarto_publish_doc() function publish single document Posit Connect. Note first time publish specify server account want use publishing. example: Subsequent updates document don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions report update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_doc(\"document.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_doc(\"document.qmd\") quarto_publish_doc(\"document.qmd\",                     server = \"rsc.example.com\", account = \"njones\",                    render = \"server\")"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"websites","dir":"Articles","previous_headings":"","what":"Websites","title":"Publishing","text":"Use quarto_publish_site() function publish website book Posit Connect. Note first time publish specify server account want use publishing. example: Subsequent updates site don’t need specify server account: example renders content locally publishes just content server. can also render server (uploading source code required render). might want order create scheduled versions website update automatically underlying data changes. , add render = \"server\" argument:","code":"library(quarto) quarto_publish_site(server = \"rsc.example.com\", account = \"njones\") quarto_publish_site() quarto_publish_site(server = \"rsc.example.com\", account = \"njones\",                     render = \"server\")"},{"path":"https://quarto-dev.github.io/quarto-r/articles/publishing.html","id":"interactive-docs","dir":"Articles","previous_headings":"","what":"Interactive Docs","title":"Publishing","text":"can publish Shiny interactive documents either Posit Connect shinyapps.io. publish Posit Connect, specify server account want use publishing (required first publish ). example: publish shinyapps.io, use server = \"shinyapps.io\": services, subsequent publishes need provide server account:","code":"library(quarto) quarto_publish_app(\"shiny.qmd\", server = \"rsc.example.com\", account = \"njones\") quarto_publish_app(\"shiny.qmd\", server = \"shinyapps.io\") quarto_publish_app(\"shiny.qmd\")"},{"path":"https://quarto-dev.github.io/quarto-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"JJ Allaire. Author, maintainer. Christophe Dervieux. Author.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Allaire J, Dervieux C (2024). quarto: R Interface 'Quarto' Markdown Publishing System. R package version 1.3.10,  https://quarto-dev.github.io/quarto-r/, https://github.com/quarto-dev/quarto-r.","code":"@Manual{,   title = {quarto: R Interface to 'Quarto' Markdown Publishing System},   author = {JJ Allaire and Christophe Dervieux},   year = {2024},   note = {R package version 1.3.10,  https://quarto-dev.github.io/quarto-r/},   url = {https://github.com/quarto-dev/quarto-r}, }"},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"section","dir":"","previous_headings":"","what":"R Interface to Quarto Markdown Publishing System","title":"R Interface to Quarto Markdown Publishing System","text":"Quarto open-source scientific technical publishing system built Pandoc. quarto package provides R interface frequently used operations Quarto Command Line Interface (CLI). package requirement using Quarto R. Rather, provides R interface common Quarto operations users prefer work R console rather terminal, package authors want programatically interface Quarto. using Quarto R package, install Quarto CLI https://quarto.org/docs/get-started/.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"render-and-preview","dir":"","previous_headings":"","what":"Render and Preview","title":"R Interface to Quarto Markdown Publishing System","text":"following functions enable render preview Quarto documents projects:","code":""},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"publishing","dir":"","previous_headings":"","what":"Publishing","title":"R Interface to Quarto Markdown Publishing System","text":"functions enable publish static interactive documents, websites, books Posit Connect shinyapps.io:","code":""},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"R Interface to Quarto Markdown Publishing System","text":"functions enable inspect Quarto installation well metadata Quarto documents projects:","code":""},{"path":"https://quarto-dev.github.io/quarto-r/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"R Interface to Quarto Markdown Publishing System","text":"Latest released version CRAN Latest dev version Github Latest build dev version r-universe","code":"# latest release version  install.packages(\"quarto\") # dev version pak::pak(\"quarto-dev/quarto-r\") # or remotes::install_github(\"quarto-dev/quarto-r\") install.packages('quarto', repos = c('https://quarto-dev.r-universe.dev', 'https://cloud.r-project.org'))"},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Check is a directory is using quarto — is_using_quarto","title":"Check is a directory is using quarto — is_using_quarto","text":"function check directory using quarto looking _quarto.yml root least one .qmd file directory","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check is a directory is using quarto — is_using_quarto","text":"","code":"is_using_quarto(dir = \".\", verbose = FALSE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check is a directory is using quarto — is_using_quarto","text":"dir directory check verbose print message result check","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/is_using_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check is a directory is using quarto — is_using_quarto","text":"","code":"dir.create(tmpdir <- tempfile()) is_using_quarto(tmpdir) #> [1] FALSE file.create(file.path(tmpdir, \"_quarto.yml\")) #> [1] TRUE is_using_quarto(tmpdir) #> [1] TRUE unlink(tmpdir, recursive = TRUE)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto-package.html","id":null,"dir":"Reference","previous_headings":"","what":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","title":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","text":"Convert R Markdown documents 'Jupyter' notebooks variety output formats using 'Quarto'.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"quarto: R Interface to 'Quarto' Markdown Publishing System — quarto-package","text":"Maintainer: JJ Allaire jj@rstudio.com (ORCID) Authors: Christophe Dervieux cderv@posit.co (ORCID)","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a Quarto extensions — quarto_add_extension","title":"Install a Quarto extensions — quarto_add_extension","text":"Add extension folder project running quarto add","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a Quarto extensions — quarto_add_extension","text":"","code":"quarto_add_extension(   extension = NULL,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a Quarto extensions — quarto_add_extension","text":"extension extension install, either archive GitHub repository described documentation https://quarto.org/docs/extensions/managing.html. no_prompt prompt confirm approval download external extension. quiet Suppress warning messages. quarto_args Character vector quarto CLI flag pass command. mainly advanced usage, e.g can useful new options added quarto CLI yet supported function argument.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"extension-trust","dir":"Reference","previous_headings":"","what":"Extension Trust","title":"Install a Quarto extensions — quarto_add_extension","text":"Quarto extensions may execute code documents rendered. Therefore, trust author extension, recommend install use extension. default no_prompt = FALSE means function ask explicit approval used interactively, disallow installation.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_add_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a Quarto extensions — quarto_add_extension","text":"","code":"if (FALSE) { # Install a template and set up a draft document from a GitHub repository quarto_add_extension(\"quarto-ext/fontawesome\")  # Install a template and set up a draft document from a ZIP archive quarto_add_extension(\"https://github.com/quarto-ext/fontawesome/archive/refs/heads/main.zip\") }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quarto project — quarto_create_project","title":"Create a quarto project — quarto_create_project","text":"function calls quarto create project <type> <name>. create new directory project name add skeletons files project type chosen.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quarto project — quarto_create_project","text":"","code":"quarto_create_project(   name,   type = \"default\",   dir = \".\",   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quarto project — quarto_create_project","text":"name name project directory created. type type project create. 1.4, can one default, website, blog, book, manuscript, confluence. dir directory create new Quarto project. no_prompt prompt confirm approval download external extension. quiet Suppress warning messages. quarto_args Character vector quarto CLI flag pass command. mainly advanced usage, e.g can useful new options added quarto CLI yet supported function argument.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_create_project.html","id":"quarto-version-required","dir":"Reference","previous_headings":"","what":"Quarto version required","title":"Create a quarto project — quarto_create_project","text":"function require Quarto 1.4 higher. Use quarto_version()check version Quarto detected.","code":""},{"path":[]},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect Quarto Input File or Project — quarto_inspect","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Inspect Quarto project input path. Inspecting project returns config engines. Inspecting input path return formats, engine, dependent resources.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"quarto_inspect(input = \".\", profile = NULL, quiet = FALSE, quarto_args = NULL)"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"input input file project directory inspect. profile Quarto project profile(s) use. Either character vector profile names NULL use default profile. quiet Suppress warning messages. quarto_args Character vector quarto CLI flag pass command. mainly advanced usage, e.g can useful new options added quarto CLI yet supported function argument.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"Named list. input files, list contains elements quarto, engines, formats, resources, plus project file part Quarto project. projects, list contains elements quarto, dir, engines, config files.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_inspect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect Quarto Input File or Project — quarto_inspect","text":"","code":"if (FALSE) { # Inspect input file file quarto_inspect(\"notebook.Rmd\")  # Inspect project quarto_inspect(\"myproject\")  # Inspect project's advanced profile quarto_inspect(   input = \"myproject\",   profile = \"advanced\" )}"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to the quarto binary — quarto_path","title":"Path to the quarto binary — quarto_path","text":"Determine path quarto binary. Uses QUARTO_PATH environment variable defined, otherwise uses Sys.().","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to the quarto binary — quarto_path","text":"","code":"quarto_path()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to the quarto binary — quarto_path","text":"Path quarto binary (NULL found)","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarto Preview — quarto_preview","title":"Quarto Preview — quarto_preview","text":"Render preview Quarto document website project.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarto Preview — quarto_preview","text":"","code":"quarto_preview(   file = NULL,   render = \"auto\",   port = \"auto\",   host = \"127.0.0.1\",   browse = TRUE,   watch = TRUE,   navigate = TRUE )  quarto_preview_stop()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quarto Preview — quarto_preview","text":"file document website project directory preview (defaults current working directory) render website preview, recent execution results computational documents used render site (optimize startup time). want perform full render prior serving pass \"\" vector specific formats render. Pass \"default\" render default format site. document preview, document rendered prior preview (pass FALSE override ). port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior). watch Watch changes automatically reload browser. navigate Automatically navigate preview browser recently rendered document.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quarto Preview — quarto_preview","text":"Automatically reloads browser input files re-rendered document resources (e.g. CSS) change.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quarto Preview — quarto_preview","text":"","code":"if (FALSE) { # Preview the project in the current directory quarto_preview()  # Preview a document quarto_preview(\"document.qmd\")  # Preview the project in \"myproj\" directory and use external browser # (rather than RStudio Viewer) quarto_preview(\"myproj\", open = utils::browseURL)  # Stop any running quarto preview quarto_preview_stop() }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish Quarto Documents — quarto_publish_doc","title":"Publish Quarto Documents — quarto_publish_doc","text":"Publish Quarto documents Posit Connect, ShinyApps, RPubs","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"quarto_publish_doc(   input,   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_app(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )  quarto_publish_site(   input = getwd(),   name = NULL,   title = NULL,   server = NULL,   account = NULL,   render = c(\"local\", \"server\", \"none\"),   metadata = list(),   ... )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish Quarto Documents — quarto_publish_doc","text":"input input file project directory published. Defaults current working directory. name Name publishing (names must unique within account). Defaults name input. title Free-form descriptive title application. Optional; supplied, often displayed favor name. deploying new document, may supply title receive auto-generated name account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. render local render locally publishing; server render server; none use whatever rendered content currently exists locally. (defaults local) metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). Multi-value fields recorded comma-separated values returned form. Custom value serialization responsibility caller. ... Named parameters pass along rsconnect::deployApp()","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_publish_doc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish Quarto Documents — quarto_publish_doc","text":"","code":"if (FALSE) { library(quarto) quarto_publish_doc(\"mydoc.qmd\") quarto_publish_app(server = \"shinyapps.io\") quarto_publish_site(server = \"rstudioconnect.example.com\") }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Markdown — quarto_render","title":"Render Markdown — quarto_render","text":"Render input file specified output format using quarto. input requires computations (e.g. Rmd Jupyter files) computations performed rendering.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Markdown — quarto_render","text":"","code":"quarto_render(   input = NULL,   output_format = NULL,   output_file = NULL,   execute = TRUE,   execute_params = NULL,   execute_dir = NULL,   execute_daemon = NULL,   execute_daemon_restart = FALSE,   execute_debug = FALSE,   use_freezer = FALSE,   cache = NULL,   cache_refresh = FALSE,   metadata = NULL,   metadata_file = NULL,   debug = FALSE,   quiet = FALSE,   profile = NULL,   quarto_args = NULL,   pandoc_args = NULL,   as_job = getOption(\"quarto.render_as_job\", \"auto\") )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Markdown — quarto_render","text":"input input file project directory rendered (defaults rendering project current working directory). output_format Target output format (defaults \"html\"). option \"\" render formats defined within file project. output_file name output file. using NULL, output filename based filename input file. output_file mapped --output option flag quarto CLI. expected filename , path, relative absolute. execute Whether execute embedded code chunks. execute_params list named parameters override custom params specified within YAML front-matter. execute_dir working directory execute embedded code chunks. execute_daemon Keep Jupyter kernel alive (defaults 300 seconds). Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_daemon_restart Restart keepalive Jupyter kernel render. Note option applicable rendering Jupyter notebooks Jupyter markdown. execute_debug Show debug output Jupyter kernel. use_freezer Force use frozen computations incremental file render. cache Cache execution output (uses knitr cache jupyter-cache respectively Rmd Jupyter input files). cache_refresh Force refresh execution cache. metadata optional named list used override YAML metadata. passed YAML file --metadata-file CLI flag. merged metadata-file options specified. metadata_file yaml file passed --metadata-file CLI flags overrite metadata. merged metadata specified, low precedence metadata options. debug Leave intermediate files place render. quiet Suppress warning messages. profile Quarto project profile(s) use. Either character vector profile names NULL use default profile. quarto_args Character vector quarto CLI flag pass command. mainly advanced usage, e.g can useful new options added quarto CLI yet supported function argument. pandoc_args Additional command line options pass pandoc. as_job Render RStudio background job. Default \"auto\", render individual documents normally projects background jobs. Use quarto.render_as_job R option control default globally.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_render.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render Markdown — quarto_render","text":"","code":"if (FALSE) { # Render R Markdown quarto_render(\"notebook.Rmd\") quarto_render(\"notebook.Rmd\", output_format = \"pdf\")  # Render Jupyter Notebook quarto_render(\"notebook.ipynb\")  # Render Jupyter Markdown quarto_render(\"notebook.md\")  # Override metadata quarto_render(\"notebook.Rmd\", override = list(lang = \"fr\", echo = \"false\")) }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve Interactive Document — quarto_serve","title":"Serve Interactive Document — quarto_serve","text":"Serve Shiny interactive document. default, document rendered first served previously rendered document, pass render - FALSE skip rendering.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve Interactive Document — quarto_serve","text":"","code":"quarto_serve(   input,   render = TRUE,   port = getOption(\"shiny.port\"),   host = getOption(\"shiny.host\", \"127.0.0.1\"),   browse = TRUE )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_serve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve Interactive Document — quarto_serve","text":"input input file run file server: shiny entry YAML front-matter. render Render document serving . port Port listen (defaults 4848) host Hostname bind (defaults 127.0.0.1) browse Open browser preview content. Defaults using RStudio Viewer running within RStudio.Pass function (e.g. utils::browseURL override behavior).","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a custom format extension template — quarto_use_template","title":"Use a custom format extension template — quarto_use_template","text":"Install use template Quarto using quarto use.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a custom format extension template — quarto_use_template","text":"","code":"quarto_use_template(   template,   no_prompt = FALSE,   quiet = FALSE,   quarto_args = NULL )"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a custom format extension template — quarto_use_template","text":"template template install, either archive GitHub repository described documentation https://quarto.org/docs/extensions/formats.html. no_prompt prompt confirm approval download external extension. quiet Suppress warnings messages. quarto_args Character vector quarto CLI flag pass command. mainly advanced usage, e.g can useful new options added quarto CLI yet supported function argument.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_use_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a custom format extension template — quarto_use_template","text":"","code":"if (FALSE) { # Install a template and set up a draft document from a GitHub repository quarto_use_template(\"quarto-journals/jss\")  # Install a template and set up a draft document from a ZIP archive quarto_use_template(\"https://github.com/quarto-journals/jss/archive/refs/heads/main.zip\") }"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check quarto version — quarto_version","title":"Check quarto version — quarto_version","text":"Determine specific version quartobinary found quarto_path(). returns 99.9.9 means using dev version.","code":""},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check quarto version — quarto_version","text":"","code":"quarto_version()"},{"path":"https://quarto-dev.github.io/quarto-r/reference/quarto_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check quarto version — quarto_version","text":"numeric_version quarto version found","code":""},{"path":"https://quarto-dev.github.io/quarto-r/news/index.html","id":"quarto-development-version","dir":"Changelog","previous_headings":"","what":"quarto (development version)","title":"quarto (development version)","text":"Add quarto_create_project() function calls quarto create project <type> <name> (thanks, @maelle, #87). Add is_using_quarto() check directory requires using Quarto (.e. _quarto.yml least one *.qmd file) (thanks, @hadley, #103). Add quarto_args quarto_render() commands pass additional arguments quarto CLI commands. advanced usage e.g. new options added Quarto CLI user-facing package’s functions (thanks, @gadenbuie, #125). Add quiet argument functions remove warnings messages. default FALSE function match quarto CLI default. Error message now advises re-run quiet = FALSE quarto_render(quiet = TRUE) run quarto render quiet mode (thanks @gadenbuie, #126, @wlandau, #16). rsconnect R package dependency moved Suggest reduce package’s overall number dependencies. rsconnect package required publishing using quarto_publish_*() functions. Users prompted install (interactive mode) installed. Add quarto_add_extension() quarto_use_template() deal Quarto extensions Quarto project. (thanks, @mcanouil, #45, @remlapmot, #42). Add profile arguments quarto_render() quarto_inspect() (thanks, #95, @andrewheiss, #123, @salim-b). Add metadata metadata_file quarto_render() pass modify Quarto metadata calling render. set, metadata merged metadata_file content. Internally, metadata passed --metadata-file quarto render (thanks, @mcanouil, #52, @maelle, #49). Added NEWS.md file track changes package. execute_params quarto_render() now converts boolean value true/false correctly expected quarto render (thanks, @marianklose, #124).","code":""}]
